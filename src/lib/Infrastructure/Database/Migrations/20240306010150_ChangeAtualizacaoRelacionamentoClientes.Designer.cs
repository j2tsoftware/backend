// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240306010150_ChangeAtualizacaoRelacionamentoClientes")]
    partial class ChangeAtualizacaoRelacionamentoClientes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Integracao.AtualizacoesRelacionamentos.AtualizacaoRelacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroRemessa")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeOperacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AtualizacoesRelacionamentos", (string)null);
                });

            modelBuilder.Entity("Domain.Integracao.AtualizacoesRelacionamentos.AtualizacaoRelacionamentoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AtualizacaoRelacionamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFimRelacionamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioRelacionamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificadorOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TipoOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("AtualizacaoRelacionamentoId");

                    b.ToTable("AtualizacoesRelacionamentosClientes", (string)null);
                });

            modelBuilder.Entity("Domain.Integracao.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFimRelacionamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioRelacionamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Documento")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("Domain.Integracao.AtualizacoesRelacionamentos.AtualizacaoRelacionamentoCliente", b =>
                {
                    b.HasOne("Domain.Integracao.AtualizacoesRelacionamentos.AtualizacaoRelacionamento", "AtualizacaoRelacionamento")
                        .WithMany("Clientes")
                        .HasForeignKey("AtualizacaoRelacionamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtualizacaoRelacionamento");
                });

            modelBuilder.Entity("Domain.Integracao.AtualizacoesRelacionamentos.AtualizacaoRelacionamento", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
